{
  "todo": [
    {
      "id": "t1",
      "title": "Introdução a Machine Learning",
      "description": "Fundamentos, tipos de aprendizado e pipeline básico",
      "subtasks": [
        {
          "id": "t1s1",
          "title": "Definições"
        },
        {
          "id": "t1s2",
          "title": "Aprendizado Supervisionado vs Não"
        },
        {
          "id": "t1s3",
          "title": "Pipeline ML"
        }
      ]
    },
    {
      "id": "t2",
      "title": "Fundamentos de Redes Neurais",
      "description": "Perceptron, camadas, ativação, loss e backprop",
      "subtasks": [
        {
          "id": "t2s1",
          "title": "Perceptron"
        },
        {
          "id": "t2s2",
          "title": "Funções de Ativação"
        },
        {
          "id": "t2s3",
          "title": "Backpropagation"
        }
      ]
    },
    {
      "id": "t3",
      "title": "NLP Clássico",
      "description": "Tokenização, stemming, TF-IDF, n-grams",
      "subtasks": [
        {
          "id": "t3s1",
          "title": "Tokenização"
        },
        {
          "id": "t3s2",
          "title": "TF-IDF"
        },
        {
          "id": "t3s3",
          "title": "n-grams"
        }
      ]
    },
    {
      "id": "t4",
      "title": "Transformers Essentials",
      "description": "Self-attention, embeddings, positional encoding",
      "subtasks": [
        {
          "id": "t4s1",
          "title": "Self-Attention"
        },
        {
          "id": "t4s2",
          "title": "Positional Encoding"
        },
        {
          "id": "t4s3",
          "title": "Arquitetura Encoder-Decoder"
        }
      ]
    },
    {
      "id": "t5",
      "title": "Prompt Engineering",
      "description": "Padrões de prompt, few-shot, role prompting",
      "subtasks": [
        {
          "id": "t5s1",
          "title": "Estratégias"
        },
        {
          "id": "t5s2",
          "title": "Few-shot"
        },
        {
          "id": "t5s3",
          "title": "Chain-of-Thought"
        }
      ]
    },
    {
      "id": "t6",
      "title": "Avaliação de Modelos",
      "description": "Métricas de classificação, regressão, ranking",
      "subtasks": [
        {
          "id": "t6s1",
          "title": "Precisão & Recall"
        },
        {
          "id": "t6s2",
          "title": "AUC-ROC"
        },
        {
          "id": "t6s3",
          "title": "RMSE"
        }
      ]
    },
    {
      "id": "t7",
      "title": "Sistemas de Recomendação",
      "description": "Collaborative filtering, conteúdo e híbridos",
      "subtasks": [
        {
          "id": "t7s1",
          "title": "User-Item Matrix"
        },
        {
          "id": "t7s2",
          "title": "Content-Based"
        },
        {
          "id": "t7s3",
          "title": "Modelo Híbrido"
        }
      ]
    },
    {
      "id": "t8",
      "title": "MLOps Básico",
      "description": "Versionamento, tracking, deployment",
      "subtasks": [
        {
          "id": "t8s1",
          "title": "Versionamento de Dados"
        },
        {
          "id": "t8s2",
          "title": "Tracking de Experimentos"
        },
        {
          "id": "t8s3",
          "title": "Deploy Contínuo"
        }
      ]
    },
    {
      "id": "t9",
      "title": "RAG Pipeline",
      "description": "Ingestão, indexação, retrieval, geração",
      "subtasks": [
        {
          "id": "t9s1",
          "title": "Indexação"
        },
        {
          "id": "t9s2",
          "title": "Retrieval"
        },
        {
          "id": "t9s3",
          "title": "Grounded Generation"
        }
      ]
    },
    {
      "id": "t10",
      "title": "Fine-tuning & Adaptação",
      "description": "Fine-tuning, LoRA, adapters, PEFT",
      "subtasks": [
        {
          "id": "t10s1",
          "title": "Fine-tuning Clássico"
        },
        {
          "id": "t10s2",
          "title": "LoRA"
        },
        {
          "id": "t10s3",
          "title": "Adapters"
        }
      ]
    }
  ],
  "lessons": [
    {
      "id": "t1s1-sec",
      "topicId": "t1",
      "subtaskId": "t1s1",
      "content": "Machine Learning é o campo que estuda algoritmos que aprendem padrões a partir de dados[[ref:1:t1d1]]. Em seguida, os principais tipos são supervisionado, não supervisionado e por reforço[[ref:2:t1d2]].\nDepois, o pipeline de ML envolve coleta, limpeza, feature engineering, treino, avaliação e deploy[[ref:3:t1d3]]. Portanto, compreender cada etapa facilita a implementação prática e segura de modelos.\nEm resumo, Machine Learning conecta dados a decisões por meio de modelos que aprendem com exemplos. Os três tipos principais dão caminhos diferentes para treinar e aplicar esses modelos. Finalmente, o pipeline descreve etapas desde a coleta até a implantação, orientando decisões.\n\nReferências: [[ref:1:t1d1]] [[ref:2:t1d2]] [[ref:3:t1d3]]",
      "citations": []
    },
    {
      "id": "t1s2-sec",
      "topicId": "t1",
      "subtaskId": "t1s2",
      "content": "Machine Learning é o campo que estuda algoritmos que aprendem padrões a partir de dados [[ref:1:t1d1]].\nPrimeiro, é comum dividir os tipos: supervisionado, não supervisionado e por reforço [[ref:2:t1d2]].\nEm seguida, o pipeline de aprendizado envolve coleta, limpeza, engenharia de features, treino, avaliação e deploy [[ref:3:t1d3]].\nDepois, o modelo é avaliado para medir se atende aos objetivos de negócio e segurança.\nPortanto, o aprendizado supervisionado usa dados com rótulos para orientar o aprendizado; o não supervisionado encontra padrões sem rótulos [[ref:2:t1d2]].\nPor fim, a escolha entre eles depende dos dados disponíveis, dos objetivos e dos custos de rotulagem.\nEm resumo, escolha supervisionado quando houver dados rotulados suficientes para treinar modelos confiáveis [[ref:2:t1d2]].\nPara dados sem rótulos ou estruturas subjacentes, o não supervisionado pode revelar padrões úteis [[ref:2:t1d2]].\n\nReferências: [[ref:1:t1d1]] [[ref:2:t1d2]] [[ref:3:t1d3]]",
      "citations": [
        "[[ref:1:t1d1]]",
        "[[ref:2:t1d2]]",
        "[[ref:3:t1d3]]"
      ]
    },
    {
      "id": "t1s3-sec",
      "topicId": "t1",
      "subtaskId": "t1s3",
      "content": "Primeiro, a Machine Learning é o campo que estuda algoritmos que aprendem padrões a partir de dados [[ref:1:t1d1]]. Em seguida, existem três grandes tipos: supervisionado, não supervisionado e por reforço [[ref:2:t1d2]]. Portanto, o pipeline de ML inclui coleta, limpeza, feature engineering, treino, avaliação e deploy [[ref:3:t1d3]].\nEm resumo, entenda o problema, selecione o tipo de aprendizado adequado e defina métricas. Depois, implemente o pipeline com coleta, limpeza, engenharia de características, treino e avaliação.\n\nReferências: [[ref:1:t1d1]] [[ref:2:t1d2]] [[ref:3:t1d3]]",
      "citations": [
        "[[ref:1:t1d1]]",
        "[[ref:2:t1d2]]",
        "[[ref:3:t1d3]]"
      ]
    }
  ],
  "currentTopicId": "t1",
  "currentSubtaskId": null,
  "currentQuestionId": null,
  "questionsQueue": [
    {
      "id": "q_mecxhowwe7d3",
      "text": "oi",
      "ts": 1755268409696,
      "from": "user",
      "route": "IGNORE",
      "needsRAG": false,
      "reason": "heuristic:score_-3|heuristic:score_-3|heuristic:score_-3"
    },
    {
      "id": "q_mecxhumwbea4",
      "text": "\"Pode fazer um resumo dos principais pontos sobre Machine Learning?\"",
      "ts": 1755268417112,
      "from": "user",
      "route": "END_TOPIC",
      "needsRAG": false,
      "reason": "Resumo conceitual solicitado sobre o tópico atual (Machine Learning)."
    }
  ],
  "broadcastQueue": [
    {
      "id": "b_q_mecxhumwbea4",
      "questionId": "q_mecxhumwbea4",
      "text": "\"Pode fazer um resumo dos principais pontos sobre Machine Learning?\"",
      "score": 1,
      "needsRAG": false,
      "reason": "Resumo conceitual solicitado sobre o tópico atual (Machine Learning).",
      "route": "END_TOPIC"
    }
  ],
  "answers": [
    {
      "id": "ans_q_mecxi81ve369",
      "questionId": "q_mecxi81ve369",
      "answer": "Diferença prática entre aprendizado supervisionado e não supervisionado em projetos reais:\n\n- O que são, na prática:\n  - Supervisionado: treina com dados rotulados (saída/classificação ou valor/regressão) para prever a saída de novas amostras. [[ref:1:t1d2]] [[ref:2:t1d1]]\n  - Não supervisionado: trabalha com dados sem rótulos para descobrir estruturas, clusters ou padrões subjacentes. [[ref:1:t1d",
      "mode": "chat_now",
      "ts": 1755268467651
    },
    {
      "id": "ans_q_mecxify9fcaf",
      "questionId": "q_mecxify9fcaf",
      "answer": "Diferença prática entre aprendizado supervisionado e não supervisionado em projetos reais:\n\n- Dados necessários e custo: supervisionado requer dados com rótulos (targets) para treinar e avaliar; não supervisionado usa dados sem rótulos, reduzindo a necessidade de etiquetagem. [[ref:1:t1d2]] [[ref:2:t1d1]]\n\n- Objetivo e saída: supervisionado visa prever uma saída para cada entrada (classificação/re",
      "mode": "chat_now",
      "ts": 1755268475278
    },
    {
      "id": "ans_q_mecxify9fcaf",
      "questionId": "q_mecxify9fcaf",
      "answer": "Diferença prática entre supervisionado e não supervisionado em projetos reais:\n\n- Aprendizado supervisionado: usa dados com rótulos para treinar modelos que prevêem o rótulo/valor de novas amostras (ex.: classe, preço). Precisa de rótulos durante o treino. Exemplos: classificação e regressão.",
      "mode": "chat_now",
      "ts": 1755268486404
    }
  ],
  "logs": [
    {
      "node": "pickSubtask",
      "topic": "t1",
      "subtask": "t1s1"
    },
    {
      "node": "pick",
      "event": "node_telemetry",
      "ms": 1,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkQuestions",
      "action": "none"
    },
    {
      "node": "checkQuestions",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "answerChatNow",
      "action": "skip_no_current"
    },
    {
      "node": "answerChatNow",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "draftLesson",
      "subtask": "t1s1"
    },
    {
      "node": "draftNode",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "groundWithRag",
      "action": "llm_generate",
      "topic": "t1",
      "subtask": "t1s1"
    },
    {
      "node": "groundNode",
      "event": "node_telemetry",
      "ms": 31449,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "finalizeSection",
      "lesson": "t1s1-sec"
    },
    {
      "node": "finalizeSection",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processPauseAnswers",
      "action": "skip"
    },
    {
      "node": "processPauseAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processEndTopicAnswers",
      "action": "skip_delegated_to_sse"
    },
    {
      "node": "processEndTopicAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkDone",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "pickSubtask",
      "topic": "t1",
      "subtask": "t1s2"
    },
    {
      "node": "pick",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkQuestions",
      "action": "none"
    },
    {
      "node": "checkQuestions",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "answerChatNow",
      "action": "skip_no_current"
    },
    {
      "node": "answerChatNow",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "draftLesson",
      "subtask": "t1s2"
    },
    {
      "node": "draftNode",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "groundWithRag",
      "action": "llm_generate",
      "topic": "t1",
      "subtask": "t1s2"
    },
    {
      "node": "groundNode",
      "event": "node_telemetry",
      "ms": 40573,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "finalizeSection",
      "lesson": "t1s2-sec"
    },
    {
      "node": "finalizeSection",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processPauseAnswers",
      "action": "skip"
    },
    {
      "node": "processPauseAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processEndTopicAnswers",
      "action": "skip_delegated_to_sse"
    },
    {
      "node": "processEndTopicAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkDone",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "pickSubtask",
      "topic": "t1",
      "subtask": "t1s3"
    },
    {
      "node": "pick",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkQuestions",
      "action": "none"
    },
    {
      "node": "checkQuestions",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "answerChatNow",
      "action": "skip_no_current"
    },
    {
      "node": "answerChatNow",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "draftLesson",
      "subtask": "t1s3"
    },
    {
      "node": "draftNode",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "groundWithRag",
      "action": "llm_generate",
      "topic": "t1",
      "subtask": "t1s3"
    },
    {
      "node": "groundNode",
      "event": "node_telemetry",
      "ms": 26885,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "finalizeSection",
      "lesson": "t1s3-sec"
    },
    {
      "node": "finalizeSection",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processPauseAnswers",
      "action": "skip"
    },
    {
      "node": "processPauseAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "processEndTopicAnswers",
      "action": "skip_delegated_to_sse"
    },
    {
      "node": "processEndTopicAnswers",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    },
    {
      "node": "checkDone",
      "event": "node_telemetry",
      "ms": 0,
      "currentQuestionId": null,
      "sessionId": "sess_mecxgsy1",
      "traceId": "sess_mecxgsy1_t0"
    }
  ],
  "done": false,
  "draft": "",
  "grounded": "",
  "sessionId": "sess_mecxgsy1",
  "traceId": "sess_mecxgsy1_t0"
}